---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: docker.pkg.github.com/two-app/user-service/user-service:0.1.14
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: JDBC_URL
          value: "jdbc:mysql://user-service-rds/users"
        - name: JDBC_URL_WITHOUT_SCHEMA
          value: "jdbc:mysql://user-service-rds"
        - name: JDBC_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-user-pass
              key: username
        - name: JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-user-pass
              key: password
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-service
  name: user-service
spec:
  ports:
  - port: 8080
    name: high
    protocol: TCP
    targetPort: 8080
  - port: 80
    name: low
    protocol: TCP
    targetPort: 8080
  selector:
    app: user-service
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: user-service-ingress
spec:
  rules:
  - http:
      paths:
      - path: /partner
        backend:
          serviceName: user-service
          servicePort: 80
      - path: /self
        backend:
          serviceName: user-service
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-rds
spec:
  type: ClusterIP
  ports:
  - port: 3306
---
apiVersion: v1
kind: Endpoints
metadata:
  name: user-service-rds
subsets:
  - addresses:
    - ip: user-service.czxkdyhdzjxs.eu-west-1.rds.amazonaws.com
    ports:
    - port: 3306
---
